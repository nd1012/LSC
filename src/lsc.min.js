"undefined"==typeof window.LSC&&(window.LSC=async(a,b,c)=>{var d=Math.floor;const f=LSC.instance?LSC.instance:this;if(LSC.instance){if("undefined"!=typeof a&&a!=f.getKey())throw new Error("Can not change LSC cache key");return b&&b>f.getCacheVersion()&&(console.debug("Initialize newer LSC cache version",b),instance.clear(b),await f.get(window.location.href)),f}LSC.instance=this;const g=new RegExp("^https?://"+document.location.hostname.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")+"(/.*)?$","i"),h=/^.+(\.([^\.|\/]+))$/,i=LSC.options.isPlugin,j=/^https\:/i,k=j.test(location.href);("undefined"==typeof a||null==a)&&(a=document.location.hostname);var l=null,m=0,n=LSC.options.useSessionStorage,o=new Map;null==localStorage.getItem(a)?null!=sessionStorage.getItem(a)&&(l=new Map(JSON.parse(sessionStorage.getItem(a))),console.debug("Found existing LSC cache in session storage",l.get("version"),l.keys())):(l=new Map(JSON.parse(localStorage.getItem(a))),console.debug("Found existing LSC cache in local storage",l.get("version"),l.keys()));const p=async a=>{if(console.debug("LSC handle link click",a),!LSC.options.enable)return void console.debug("LSC disabled");if(a.preventDefault(),!(await f.navigate(a.target.href))){if(console.warn("LSC failed to navigate",a),LSC.debugOnError)debugger;document.location.href=a.target.href}},q=async a=>{if(!(!a.ctrlKey||a.shiftKey||a.altKey||"R"!=a.key)){await f.clear(f.getCacheVersion());debugger}},r=a=>{if(!LSC.exclude.length)return!1;for(let b of LSC.exclude)if(b instanceof RegEx){if(b.test(a))return!0;}else if(a.substring(0,b.length)==b)return!0;return!1},s=a=>{if(!LSC.include.length)return!1;for(let b of LSC.include)if(b instanceof RegEx){if(b.test(a))return!0;}else if(a.substring(0,b.length)==b)return!0;return!1},t=()=>{if(!LSC.extensions.length)return[];const b=document.querySelector("html"),d=LSC.extensions,i=[],l=Date.now();let m;for(let[,e]of document.querySelectorAll(LSC.selector).entries())(s(e.href)||0>e.href.indexOf("?")&&0>e.href.indexOf("#")&&(!k||j.test(e.href))&&g.test(e.href)&&(!h.test(e.href)&&"/"==e.href[e.href.length-1]||-1<d.indexOf(e.href.replace(h,"$2")))&&!r(e.href))&&(console.debug("Manage link",e.href,e),m=new CustomEvent("beforemanage",{detail:{link:e,manage:!0,preFetch:!0}}),LSC.events.dispatchEvent(m),m.detail.manage?(e.addEventListener("click",p),e.setAttribute("data-lscmanaged",l),i.push(e)):console.debug("Event handler disabled LSC link management",e),m.detail.preFetch?(!LSC.options.maxEntries||LSC.options.maxEntries>i.length)&&(c||b.hasAttribute("data-prefetch")||e.hasAttribute("data-prefetch"))&&!b.hasAttribute("data-noprefetch")&&!e.hasAttribute("data-noprefetch")&&(e.setAttribute("data-lscprefetched",l),f.get(e.href,void 0,void 0,!0).then(a=>{!0!==a&&e.setAttribute("data-lscprefetched",e.getAttribute("data-lscprefetched")+" (failed)")})):console.debug("Event handler disabled LSC pre-fetching",e));return LSC.events.dispatchEvent(new CustomEvent("manage",{detail:{html:b,extensions:d,managed:i}})),i};return this.getCache=()=>l,this.getKey=()=>a,this.getCacheVersion=()=>l.get("version"),this.getPreFetch=()=>c,this.getHistoryIndex=()=>m,this.getFetchCount=()=>o.size,this.getSessionStorage=()=>n,this.setSessionStorage=b=>b==n?f:(n=b,n&&null!=localStorage.getItem(a)&&localStorage.removeItem(a),f.store(!0),f),this.getIsPlugin=()=>i,this.navigate=async(a,b,c)=>{console.debug("LSC navigate to \""+a+"\"",b,c);const d=document.location.href,e="undefined"!=typeof c,g=await f.get(a,!0);if(null==g)return console.warn("LSC got no HTML for URI \""+a+"\"",b,c,d),!1;if(LSC.events.dispatchEvent(new CustomEvent("beforenavigate",{detail:{uri:a,noState:b,oldUri:d,history:m}})),LSC.options.history?(document.querySelector("html").innerHTML=g,scrollTo(0,0),b?(m||e)&&(e?m=c:m--):(e?m=c:m++,history.pushState("LSC"+m,document.title,a))):(m=0,document.write(g),document.close(),document.addEventListener("keydown",q)),t(),LSC.options.history){const a=document.querySelector("body");a&&a.hasAttribute("onload")&&new Function("event",a.getAttribute("onload"))(new Event("load"))}return LSC.events.dispatchEvent(new CustomEvent("navigated",{detail:{uri:a,noState:b,oldUri:d,history:m}})),!0},this.update=async(a,b,c,d)=>{if(console.debug("Update LSC cache for \""+a+"\"",b,c),!b&&o.has(a))return console.debug("LSC avoid double-fetching \""+a+"\""),await o.get(a),d?l.has(a):l.get(a);var e=!1;if(!b&&o.size>=LSC.options.maxConcurrentFetch){for(console.debug("Waiting for running concurrent LSC fetch-actions to finish ("+o.size+")",o),e=!0;o.size>=LSC.options.maxConcurrentFetch;await o.entries().next().value[1]);console.debug("Continue updating LSC cache for \""+a+"\"")}var f=null;b||o.set(a,new Promise(a=>f=a));try{const f=await fetch(a),h=f.headers.get("Content-Type").trim(),i=h.toLowerCase(),j=LSC.isContentSupported(i),k=await f.text(),m=new CustomEvent("update",{detail:{uri:a,html:k,response:f,priority:!!b,ignoreMime:!!c}});var g=399<f.status;if(g&&console.warn("Received http status code #"+f.status+" (will not cache)",f),!j&&!c){if(console.warn("LSC received an invalid response MIME type for \""+a+"\"",a,i,f,m),LSC.debugOnError)debugger;let e=new CustomEvent("invalid",{detail:{uri:a,html:k,contentType:h,response:f,cancel:!1,priority:!!b,ignoreMime:!!c}});if(LSC.events.dispatchEvent(e),e.detail.cancel)return console.debug("Invalid MIME type response handling from \""+a+"\" has been disabled by LSC event handler",e),!d&&l.get(a)}if(LSC.events.dispatchEvent(m),"string"!=typeof m.detail.html){if(console.warn("LSC failed to fetch HTML from \""+a+"\"",m),LSC.debugOnError)debugger;return LSC.events.dispatchEvent(new CustomEvent("error",{detail:{uri:a,html:m.detail.html}})),!d&&l.get(a)}if(!!g)l.has(a)&&(m.detail.html=l.get(a));else if(l.set(a,m.detail.html),LSC.options.maxEntries&&l.size>LSC.options.maxEntries+1){let a=l.keys();a.next(),l.delete(a.next().value)}return LSC.events.dispatchEvent(new CustomEvent("updated",{detail:{uri:a,html:m.detail.html,priority:!!b,ignoreMime:!!c}})),d?!g:m.detail.html}catch(b){if(console.error("Error updating LSC cache for \""+a+"\"",b),LSC.debugOnError)debugger;return!d&&l.get(a)}finally{b||(f(),o.delete(a),e&&console.debug("Finished updating LSC cache for \""+a+"\""))}},this.get=async(a,b,c,d)=>l.has(a)?l.get(a):await f.update(a,b,c,d),this.clear=a=>(LSC.options.quiet||console.trace("Clear LSC cache",a),l?l.clear():l=new Map,l.set("version",a?+a:d(Date.now()/1e3)),LSC.events.dispatchEvent(new CustomEvent("clear",{detail:{cache:l,version:a}})),f.store(!0)),this.store=b=>{if(!LSC.options.enable)return l;try{LSC.options.quiet||console.trace("Store LSC cache",b),LSC.events.dispatchEvent(new CustomEvent("store",{detail:{cache:l}})),(n?sessionStorage:localStorage).setItem(a,JSON.stringify(Array.from(l.entries())))}catch(a){if(!b)console.error("Failed to store the LSC cache - initializing",a),f.clear(l.get("version"));else if(console.error("Failed to store the LSC cache",a),LSC.debugOnError)debugger}return l},LSC.options.quiet||console.log("LSC initializing",LSC.VERSION(),a,b,c,i),(!l||b&&l.get("version")<+b)&&this.clear(b),document.body.addEventListener("beforeunload",this.store),history.replaceState("LSC0",document.title,document.location.href),await this.get(document.location.href),window.addEventListener("popstate",async a=>{if(!LSC.options.history)return;const b=window.location.href,c=parseInt(a.state.substring(3)),d=c<m;if(console.debug("LSC history (#"+c+") navigation "+(d?"back":"forward")+" to \""+b+"\"",a),a.preventDefault(),!(await f.navigate(b,!0,c))){if(console.warn("LSC failed to navigate to \""+b+"\" - fallback to real browser relocation",a),LSC.debugOnError)debugger;return void(document.location.href=b)}setTimeout(()=>LSC.events.dispatchEvent(new CustomEvent("history",{detail:{uri:b,index:c,back:d}})),0)}),t(),document.addEventListener("keydown",q),LSC.events.dispatchEvent(new Event("load")),this},LSC.isContentSupported=a=>{a=a.toLowerCase();for(let b of LSC.mimeTypes)if(a.substring(0,b.length)==b)return!0;return!1},LSC.instance=null,LSC.events=new EventTarget,LSC.selector="a:not([target]):not([onclick]):not([data-lscunmanaged]),a[data-lscmanaged]",LSC.extensions=["html","htm","php"],LSC.mimeTypes=["text/html","application/xhtml+xml"],LSC.exclude=[],LSC.include=[],LSC.options={enable:!0,quiet:!1,history:!0,useSessionStorage:!1,maxEntries:0,maxConcurrentFetch:5,debugOnError:!0,isPlugin:!1},LSC.VERSION=()=>4);